[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/xiaolei/ee459-full-throttle-bottle/esp32_master/build/bootloader/esp-idf/esptool_py && /Users/xiaolei/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/xiaolei/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/xiaolei/ee459-full-throttle-bottle/esp32_master/build/bootloader/bootloader.bin
Bootloader binary size 0x6580 bytes. 0xa80 bytes (9%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/esp32_master.c.obj
FAILED: esp-idf/main/CMakeFiles/__idf_main.dir/esp32_master.c.obj 
/Users/xiaolei/.espressif/tools/xtensa-esp-elf/esp-14.2.0_20241119/xtensa-esp-elf/bin/xtensa-esp32-elf-gcc -DESP_PLATFORM -DIDF_VER=\"v5.4.1\" -DSOC_MMU_PAGE_SIZE=CONFIG_MMU_PAGE_SIZE -DSOC_XTAL_FREQ_MHZ=CONFIG_XTAL_FREQ -D_GLIBCXX_HAVE_POSIX_SEMAPHORE -D_GLIBCXX_USE_POSIX_SEMAPHORE -D_GNU_SOURCE -D_POSIX_READER_WRITER_LOCKS -I/Users/xiaolei/ee459-full-throttle-bottle/esp32_master/build/config -I/Users/xiaolei/ee459-full-throttle-bottle/esp32_master/main -I/Users/xiaolei/esp/esp-idf/components/newlib/platform_include -I/Users/xiaolei/esp/esp-idf/components/freertos/config/include -I/Users/xiaolei/esp/esp-idf/components/freertos/config/include/freertos -I/Users/xiaolei/esp/esp-idf/components/freertos/config/xtensa/include -I/Users/xiaolei/esp/esp-idf/components/freertos/FreeRTOS-Kernel/include -I/Users/xiaolei/esp/esp-idf/components/freertos/FreeRTOS-Kernel/portable/xtensa/include -I/Users/xiaolei/esp/esp-idf/components/freertos/FreeRTOS-Kernel/portable/xtensa/include/freertos -I/Users/xiaolei/esp/esp-idf/components/freertos/esp_additions/include -I/Users/xiaolei/esp/esp-idf/components/esp_hw_support/include -I/Users/xiaolei/esp/esp-idf/components/esp_hw_support/include/soc -I/Users/xiaolei/esp/esp-idf/components/esp_hw_support/include/soc/esp32 -I/Users/xiaolei/esp/esp-idf/components/esp_hw_support/dma/include -I/Users/xiaolei/esp/esp-idf/components/esp_hw_support/ldo/include -I/Users/xiaolei/esp/esp-idf/components/esp_hw_support/debug_probe/include -I/Users/xiaolei/esp/esp-idf/components/esp_hw_support/port/esp32/. -I/Users/xiaolei/esp/esp-idf/components/esp_hw_support/port/esp32/include -I/Users/xiaolei/esp/esp-idf/components/heap/include -I/Users/xiaolei/esp/esp-idf/components/heap/tlsf -I/Users/xiaolei/esp/esp-idf/components/log/include -I/Users/xiaolei/esp/esp-idf/components/soc/include -I/Users/xiaolei/esp/esp-idf/components/soc/esp32 -I/Users/xiaolei/esp/esp-idf/components/soc/esp32/include -I/Users/xiaolei/esp/esp-idf/components/soc/esp32/register -I/Users/xiaolei/esp/esp-idf/components/hal/platform_port/include -I/Users/xiaolei/esp/esp-idf/components/hal/esp32/include -I/Users/xiaolei/esp/esp-idf/components/hal/include -I/Users/xiaolei/esp/esp-idf/components/esp_rom/include -I/Users/xiaolei/esp/esp-idf/components/esp_rom/esp32/include -I/Users/xiaolei/esp/esp-idf/components/esp_rom/esp32/include/esp32 -I/Users/xiaolei/esp/esp-idf/components/esp_rom/esp32 -I/Users/xiaolei/esp/esp-idf/components/esp_common/include -I/Users/xiaolei/esp/esp-idf/components/esp_system/include -I/Users/xiaolei/esp/esp-idf/components/esp_system/port/soc -I/Users/xiaolei/esp/esp-idf/components/esp_system/port/include/private -I/Users/xiaolei/esp/esp-idf/components/xtensa/esp32/include -I/Users/xiaolei/esp/esp-idf/components/xtensa/include -I/Users/xiaolei/esp/esp-idf/components/xtensa/deprecated_include -I/Users/xiaolei/esp/esp-idf/components/lwip/include -I/Users/xiaolei/esp/esp-idf/components/lwip/include/apps -I/Users/xiaolei/esp/esp-idf/components/lwip/include/apps/sntp -I/Users/xiaolei/esp/esp-idf/components/lwip/lwip/src/include -I/Users/xiaolei/esp/esp-idf/components/lwip/port/include -I/Users/xiaolei/esp/esp-idf/components/lwip/port/freertos/include -I/Users/xiaolei/esp/esp-idf/components/lwip/port/esp32xx/include -I/Users/xiaolei/esp/esp-idf/components/lwip/port/esp32xx/include/arch -I/Users/xiaolei/esp/esp-idf/components/lwip/port/esp32xx/include/sys -I/Users/xiaolei/esp/esp-idf/components/nvs_flash/include -I/Users/xiaolei/esp/esp-idf/components/esp_partition/include -I/Users/xiaolei/esp/esp-idf/components/esp_event/include -I/Users/xiaolei/esp/esp-idf/components/esp_netif/include -I/Users/xiaolei/esp/esp-idf/components/esp_wifi/include -I/Users/xiaolei/esp/esp-idf/components/esp_wifi/include/local -I/Users/xiaolei/esp/esp-idf/components/esp_wifi/wifi_apps/include -I/Users/xiaolei/esp/esp-idf/components/esp_wifi/wifi_apps/nan_app/include -I/Users/xiaolei/esp/esp-idf/components/esp_phy/include -I/Users/xiaolei/esp/esp-idf/components/esp_phy/esp32/include -I/Users/xiaolei/esp/esp-idf/components/json/cJSON -I/Users/xiaolei/esp/esp-idf/components/driver/deprecated -I/Users/xiaolei/esp/esp-idf/components/driver/i2c/include -I/Users/xiaolei/esp/esp-idf/components/driver/touch_sensor/include -I/Users/xiaolei/esp/esp-idf/components/driver/twai/include -I/Users/xiaolei/esp/esp-idf/components/driver/touch_sensor/esp32/include -I/Users/xiaolei/esp/esp-idf/components/esp_pm/include -I/Users/xiaolei/esp/esp-idf/components/esp_ringbuf/include -I/Users/xiaolei/esp/esp-idf/components/esp_driver_gpio/include -I/Users/xiaolei/esp/esp-idf/components/esp_driver_pcnt/include -I/Users/xiaolei/esp/esp-idf/components/esp_driver_gptimer/include -I/Users/xiaolei/esp/esp-idf/components/esp_driver_spi/include -I/Users/xiaolei/esp/esp-idf/components/esp_driver_mcpwm/include -I/Users/xiaolei/esp/esp-idf/components/esp_driver_ana_cmpr/include -I/Users/xiaolei/esp/esp-idf/components/esp_driver_i2s/include -I/Users/xiaolei/esp/esp-idf/components/esp_driver_sdmmc/include -I/Users/xiaolei/esp/esp-idf/components/sdmmc/include -I/Users/xiaolei/esp/esp-idf/components/esp_driver_sdspi/include -I/Users/xiaolei/esp/esp-idf/components/esp_driver_sdio/include -I/Users/xiaolei/esp/esp-idf/components/esp_driver_dac/include -I/Users/xiaolei/esp/esp-idf/components/esp_driver_rmt/include -I/Users/xiaolei/esp/esp-idf/components/esp_driver_tsens/include -I/Users/xiaolei/esp/esp-idf/components/esp_driver_sdm/include -I/Users/xiaolei/esp/esp-idf/components/esp_driver_i2c/include -I/Users/xiaolei/esp/esp-idf/components/esp_driver_uart/include -I/Users/xiaolei/esp/esp-idf/components/vfs/include -I/Users/xiaolei/esp/esp-idf/components/esp_driver_ledc/include -I/Users/xiaolei/esp/esp-idf/components/esp_driver_parlio/include -I/Users/xiaolei/esp/esp-idf/components/esp_driver_usb_serial_jtag/include -I/Users/xiaolei/esp/esp-idf/components/esp_http_server/include -I/Users/xiaolei/esp/esp-idf/components/http_parser -mlongcalls -Wno-frame-address  -fno-builtin-memcpy -fno-builtin-memset -fno-builtin-bzero -fno-builtin-stpcpy -fno-builtin-strncpy -fdiagnostics-color=always -ffunction-sections -fdata-sections -Wall -Werror=all -Wno-error=unused-function -Wno-error=unused-variable -Wno-error=unused-but-set-variable -Wno-error=deprecated-declarations -Wextra -Wno-error=extra -Wno-unused-parameter -Wno-sign-compare -Wno-enum-conversion -gdwarf-4 -ggdb -Og -fno-shrink-wrap -fmacro-prefix-map=/Users/xiaolei/ee459-full-throttle-bottle/esp32_master=. -fmacro-prefix-map=/Users/xiaolei/esp/esp-idf=/IDF -fstrict-volatile-bitfields -fno-jump-tables -fno-tree-switch-conversion -std=gnu17 -Wno-old-style-declaration -MD -MT esp-idf/main/CMakeFiles/__idf_main.dir/esp32_master.c.obj -MF esp-idf/main/CMakeFiles/__idf_main.dir/esp32_master.c.obj.d -o esp-idf/main/CMakeFiles/__idf_main.dir/esp32_master.c.obj -c /Users/xiaolei/ee459-full-throttle-bottle/esp32_master/main/esp32_master.c
/Users/xiaolei/ee459-full-throttle-bottle/esp32_master/main/esp32_master.c: In function 'root_get_handler':
/Users/xiaolei/ee459-full-throttle-bottle/esp32_master/main/esp32_master.c:439:9: error: '<script>function updateData(...' directive output truncated writing 2374 bytes into a region of size 1024 [-Werror=format-truncation=]
  439 |         "<script>"
      |         ^~~~~~~~~~
/Users/xiaolei/ee459-full-throttle-bottle/esp32_master/main/esp32_master.c:464:41: note: format string is defined here
  439 |         "<script>"
      |          ~~~~~~~~~                       
  440 |         "function updateData() {"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~        
  441 |         "  fetch('/data')"
      |         ~~~~~~~~~~~~~~~~~~               
  442 |         "    .then(response => response.json())"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  443 |         "    .then(data => {"
      |         ~~~~~~~~~~~~~~~~~~~~~            
  444 |         "      if (data && data.heaters) {"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  445 |         "        data.heaters.forEach(heater => {"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  446 |         "          const addrHex = '0x' + heater.address.toString(16).toUpperCase().padStart(2, '0');"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  447 |         "          const tempElement = document.getElementById('currentTemp_' + addrHex);"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  448 |         "          const setElement = document.getElementById('currentSet_' + addrHex);"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  449 |         "          if (tempElement) {"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   
  450 |         "             if (heater.read_ok) { "
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  451 |         "               tempElement.innerText = heater.current.toFixed(2) + ' C';"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  452 |         "               tempElement.classList.remove('error'); "
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  453 |         "             } else { "
      |         ~~~~~~~~~~~~~~~~~~~~~~~~         
  454 |         "               tempElement.innerText = 'Read Error';"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  455 |         "               tempElement.classList.add('error'); "
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  456 |         "             }"
      |         ~~~~~~~~~~~~~~~~                 
  457 |         "          }"
      |         ~~~~~~~~~~~~~                    
  458 |         "          if (setElement) {"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    
  459 |         "             setElement.innerText = heater.setpoint + ' C';"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  460 |         "          }"
      |         ~~~~~~~~~~~~~                    
  461 |         "        });"
      |         ~~~~~~~~~~~~~                    
  462 |         "        document.getElementById('status').innerText = 'Data updated: ' + new Date().toLocaleTimeString();"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  463 |         "      } else {"
      |         ~~~~~~~~~~~~~~~~                 
  464 |         "        document.getElementById('status').innerText = 'Error fetching data or no heaters found.';"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  465 |         "      }"
      |         ~~~~~~~~~                        
  466 |         "    })"
      |         ~~~~~~~~                         
  467 |         "    .catch(error => {"
      |         ~~~~~~~~~~~~~~~~~~~~~~~          
  468 |         "       console.error('Error fetching data:', error);"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  469 |         "       document.getElementById('status').innerText = 'Fetch error: ' + error;"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  470 |         "     });"
      |         ~~~~~~~~~~                       
  471 |         "}"
      |         ~~~                              
  472 |         "function setTemp(address, temp) {"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  473 |         "  const addrHex = '0x' + address.toString(16).toUpperCase().padStart(2, '0');"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  474 |         "  document.getElementById('status').innerText = 'Setting ' + addrHex + ' to ' + temp + ' C...';"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  475 |         "  fetch(`/set?address=${address}&temp=${temp}`)"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  476 |         "    .then(response => {"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~        
  477 |         "       if (response.ok) { "
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~     
  478 |         "         console.log('Setpoint set successfully for ' + addrHex + ' to ' + temp + ' C'); "
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  479 |         "         document.getElementById('status').innerText = 'Setpoint for ' + addrHex + ' set to ' + temp + ' C.';"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  480 |         "         setTimeout(updateData, 500);"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  481 |         "       } else { "
      |         ~~~~~~~~~~~~~~~~~~               
  482 |         "         console.error('Failed to set setpoint for ' + addrHex);"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  483 |         "         response.text().then(text => { document.getElementById('status').innerText = 'Failed to set ' + addrHex + ': ' + text; });"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  484 |         "       } "
      |         ~~~~~~~~~~~                      
  485 |         "    })"
      |         ~~~~~~~~                         
  486 |         "    .catch(error => { "
      |         ~~~~~~~~~~~~~~~~~~~~~~~~         
  487 |         "      console.error('Error setting temperature for ' + addrHex + ':', error); "
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  488 |         "      document.getElementById('status').innerText = 'Error sending setpoint for ' + addrHex + ': ' + error;"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  489 |         "    });"
      |         ~~~~~~~~~                        
  490 |         "  return false; "
      |         ~~~~~~~~~~~~~~~~~~               
  491 |         "}"
      |         ~~~                              
  492 |         "document.addEventListener('DOMContentLoaded', () => {"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  493 |         "  updateData();"
      |         ~~~~~~~~~~~~~~~~~                
  494 |         "  setInterval(updateData, 5000);"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  495 |         "});"
      |         ~~~~~                            
  496 |         "</script>"
      |         ~~~~~~~~~~~                      
  497 |         "</head>" // Close head tag
      |         ~~~~~~~~                         
/Users/xiaolei/ee459-full-throttle-bottle/esp32_master/main/esp32_master.c:438:5: note: 'snprintf' output 2375 bytes into a destination of size 1024
  438 |     snprintf(chunk_buf, sizeof(chunk_buf),
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  439 |         "<script>"
      |         ~~~~~~~~~~
  440 |         "function updateData() {"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~
  441 |         "  fetch('/data')"
      |         ~~~~~~~~~~~~~~~~~~
  442 |         "    .then(response => response.json())"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  443 |         "    .then(data => {"
      |         ~~~~~~~~~~~~~~~~~~~~~
  444 |         "      if (data && data.heaters) {"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  445 |         "        data.heaters.forEach(heater => {"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  446 |         "          const addrHex = '0x' + heater.address.toString(16).toUpperCase().padStart(2, '0');"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  447 |         "          const tempElement = document.getElementById('currentTemp_' + addrHex);"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  448 |         "          const setElement = document.getElementById('currentSet_' + addrHex);"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  449 |         "          if (tempElement) {"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  450 |         "             if (heater.read_ok) { "
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  451 |         "               tempElement.innerText = heater.current.toFixed(2) + ' C';"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  452 |         "               tempElement.classList.remove('error'); "
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  453 |         "             } else { "
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  454 |         "               tempElement.innerText = 'Read Error';"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  455 |         "               tempElement.classList.add('error'); "
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  456 |         "             }"
      |         ~~~~~~~~~~~~~~~~
  457 |         "          }"
      |         ~~~~~~~~~~~~~
  458 |         "          if (setElement) {"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  459 |         "             setElement.innerText = heater.setpoint + ' C';"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  460 |         "          }"
      |         ~~~~~~~~~~~~~
  461 |         "        });"
      |         ~~~~~~~~~~~~~
  462 |         "        document.getElementById('status').innerText = 'Data updated: ' + new Date().toLocaleTimeString();"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  463 |         "      } else {"
      |         ~~~~~~~~~~~~~~~~
  464 |         "        document.getElementById('status').innerText = 'Error fetching data or no heaters found.';"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  465 |         "      }"
      |         ~~~~~~~~~
  466 |         "    })"
      |         ~~~~~~~~
  467 |         "    .catch(error => {"
      |         ~~~~~~~~~~~~~~~~~~~~~~~
  468 |         "       console.error('Error fetching data:', error);"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  469 |         "       document.getElementById('status').innerText = 'Fetch error: ' + error;"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  470 |         "     });"
      |         ~~~~~~~~~~
  471 |         "}"
      |         ~~~
  472 |         "function setTemp(address, temp) {"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  473 |         "  const addrHex = '0x' + address.toString(16).toUpperCase().padStart(2, '0');"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  474 |         "  document.getElementById('status').innerText = 'Setting ' + addrHex + ' to ' + temp + ' C...';"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  475 |         "  fetch(`/set?address=${address}&temp=${temp}`)"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  476 |         "    .then(response => {"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~
  477 |         "       if (response.ok) { "
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  478 |         "         console.log('Setpoint set successfully for ' + addrHex + ' to ' + temp + ' C'); "
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  479 |         "         document.getElementById('status').innerText = 'Setpoint for ' + addrHex + ' set to ' + temp + ' C.';"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  480 |         "         setTimeout(updateData, 500);"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  481 |         "       } else { "
      |         ~~~~~~~~~~~~~~~~~~
  482 |         "         console.error('Failed to set setpoint for ' + addrHex);"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  483 |         "         response.text().then(text => { document.getElementById('status').innerText = 'Failed to set ' + addrHex + ': ' + text; });"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  484 |         "       } "
      |         ~~~~~~~~~~~
  485 |         "    })"
      |         ~~~~~~~~
  486 |         "    .catch(error => { "
      |         ~~~~~~~~~~~~~~~~~~~~~~~~
  487 |         "      console.error('Error setting temperature for ' + addrHex + ':', error); "
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  488 |         "      document.getElementById('status').innerText = 'Error sending setpoint for ' + addrHex + ': ' + error;"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  489 |         "    });"
      |         ~~~~~~~~~
  490 |         "  return false; "
      |         ~~~~~~~~~~~~~~~~~~
  491 |         "}"
      |         ~~~
  492 |         "document.addEventListener('DOMContentLoaded', () => {"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  493 |         "  updateData();"
      |         ~~~~~~~~~~~~~~~~~
  494 |         "  setInterval(updateData, 5000);"
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  495 |         "});"
      |         ~~~~~
  496 |         "</script>"
      |         ~~~~~~~~~~~
  497 |         "</head>" // Close head tag
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  498 |     );
      |     ~
cc1: some warnings being treated as errors
ninja: build stopped: subcommand failed.
